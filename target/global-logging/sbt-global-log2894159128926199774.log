[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\USUARIO\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\USUARIO\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 17.0.1)
[debug]       Load.loadUnit: plugins took 87.6021ms
[debug]       Load.loadUnit: defsScala took 0.2807ms
[debug] [Loading] Scanning directory C:\Users\USUARIO\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\USUARIO\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.5927 ms
[debug]           Load.resolveProject(global-plugins) took 41.3372ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\USUARIO\.sbt\1.0\plugins, plugins: List(<none>))) took 77.8549ms
[debug] [Loading] Done in C:\Users\USUARIO\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 98.0209ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2117ms
[debug]     Load.loadUnit(file:/C:/Users/USUARIO/.sbt/1.0/plugins/, ...) took 194.7163ms
[debug]   Load.apply: load took 399.7819ms
[debug]   Load.apply: resolveProjects took 8.5825ms
[debug]   Load.apply: finalTransforms took 63.8843ms
[debug]   Load.apply: config.delegates took 8.9032ms
[debug]   Load.apply: Def.make(settings)... took 647.5477ms
[debug]   Load.apply: structureIndex took 132.2552ms
[debug]   Load.apply: mkStreams took 1.4539ms
[info] loading global plugins from C:\Users\USUARIO\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7278.2728ms
[debug]                 Load.loadUnit: plugins took 31.3949ms
[debug]                 Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\USUARIO\IdeaProjects\Copia de Taller 5 - Plantilla\project\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\USUARIO\IdeaProjects\Copia de Taller 5 - Plantilla\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.568 ms
[debug]                     Load.resolveProject(copia-de-taller-5-plantilla-build-build) took 1.3493ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id copia-de-taller-5-plantilla-build-build, base: C:\Users\USUARIO\IdeaProjects\Copia de Taller 5 - Plantilla\project\project, plugins: List(<none>))) took 3.4498ms
[debug] [Loading] Done in C:\Users\USUARIO\IdeaProjects\Copia de Taller 5 - Plantilla\project\project, returning: (copia-de-taller-5-plantilla-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 5.6765ms
[debug]                 Load.loadUnit: cleanEvalClasses took 0.0125ms
[debug]               Load.loadUnit(file:/C:/Users/USUARIO/IdeaProjects/Copia%20de%20Taller%205%20-%20Plantilla/project/project/, ...) took 37.8749ms
[debug]             Load.apply: load took 39.6561ms
[debug]             Load.apply: resolveProjects took 0.1672ms
[debug]             Load.apply: finalTransforms took 9.3758ms
[debug]             Load.apply: config.delegates took 0.2894ms
[debug]             Load.apply: Def.make(settings)... took 85.4212ms
[debug]             Load.apply: structureIndex took 24.1641ms
[debug]             Load.apply: mkStreams took 0.0042ms
[info] loading project definition from C:\Users\USUARIO\IdeaProjects\Copia de Taller 5 - Plantilla\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 857.3995ms
[debug]           Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\USUARIO\IdeaProjects\Copia de Taller 5 - Plantilla\project
[debug]             Load.loadUnit: mkEval took 4.9591ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\USUARIO\IdeaProjects\Copia de Taller 5 - Plantilla\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4367 ms
[info] loading settings for project copia-de-taller-5-plantilla-build from idea.sbt ...
[debug]               Load.resolveProject(copia-de-taller-5-plantilla-build) took 3.1552ms
[debug]             Load.loadTransitive: finalizeProject(Project(id copia-de-taller-5-plantilla-build, base: C:\Users\USUARIO\IdeaProjects\Copia de Taller 5 - Plantilla\project, plugins: List(<none>))) took 5.1235ms
[debug] [Loading] Done in C:\Users\USUARIO\IdeaProjects\Copia de Taller 5 - Plantilla\project, returning: (copia-de-taller-5-plantilla-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3337.216ms
[debug]           Load.loadUnit: cleanEvalClasses took 19.6433ms
[debug]         Load.loadUnit(file:/C:/Users/USUARIO/IdeaProjects/Copia%20de%20Taller%205%20-%20Plantilla/project/, ...) took 4224.1589ms
[debug]       Load.apply: load took 4239.3317ms
[debug]       Load.apply: resolveProjects took 0.2098ms
[debug]       Load.apply: finalTransforms took 15.2479ms
[debug]       Load.apply: config.delegates took 2.307ms
[debug]       Load.apply: Def.make(settings)... took 121.3559ms
[debug]       Load.apply: structureIndex took 44.4681ms
[debug]       Load.apply: mkStreams took 0.0046ms
[info] loading project definition from C:\Users\USUARIO\IdeaProjects\Copia de Taller 5 - Plantilla\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6723.1675ms
[debug]     Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Users\USUARIO\IdeaProjects\Copia de Taller 5 - Plantilla
[debug]       Load.loadUnit: mkEval took 0.4226ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.1368 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 32.7763ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\USUARIO\IdeaProjects\Copia de Taller 5 - Plantilla, plugins: List(<none>))) took 39.2264ms
[debug] [Loading] Done in C:\Users\USUARIO\IdeaProjects\Copia de Taller 5 - Plantilla, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3892.16ms
[debug]     Load.loadUnit: cleanEvalClasses took 32.4424ms
[debug]   Load.loadUnit(file:/C:/Users/USUARIO/IdeaProjects/Copia%20de%20Taller%205%20-%20Plantilla/, ...) took 10648.6651ms
[debug] Load.apply: load took 10651.6418ms
[debug] Load.apply: resolveProjects took 0.1078ms
[debug] Load.apply: finalTransforms took 26.1269ms
[debug] Load.apply: config.delegates took 0.2741ms
[debug] Load.apply: Def.make(settings)... took 105.9648ms
[debug] Load.apply: structureIndex took 34.2784ms
[debug] Load.apply: mkStreams took 0.0037ms
[info] set current project to Taller 5 - Problema Fuertemente Paralelo (in build file:/C:/Users/USUARIO/IdeaProjects/Copia%20de%20Taller%205%20-%20Plantilla/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62254 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62254, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Taller 5 - Problema Fuertemente Paralelo (in build file:/C:/Users/USUARIO/IdeaProjects/Copia%20de%20Taller%205%20-%20Plantilla/)
[debug] > Exec(idea-shell, None, None)
